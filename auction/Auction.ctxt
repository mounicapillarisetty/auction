#BlueJ class context
comment0.target=Auction
comment0.text=\r\n\ A\ simple\ model\ of\ an\ auction.\r\n\ The\ auction\ maintains\ a\ list\ of\ lots\ of\ arbitrary\ length.\r\n\r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ Kolling.\r\n\ @version\ 2006.03.30\r\n\r\n\ @author\ (of\ AuctionSkeleton)\ Lynn\ Marshall\r\n\ @version\ 2.0\r\n\ \r\n\ @author\ Mounica\ Pillarisetty\r\n\ @version\ 10/07/17\r\n\ \r\n
comment1.params=
comment1.target=Auction()
comment1.text=\r\n\ Creating\ a\ new\ auction.\r\n
comment2.params=newAuction
comment2.target=Auction(Auction)
comment2.text=\r\n\ \r\n\ Add\ a\ second\ constructor\ here.\ \ \r\n\ This\ constructor\ takes\ an\ Auction\ as\ a\ parameter.\ \ \r\n\ Provided\ the\ auction\ parameter\ is\ closed,\ the\ constructor\ creates\ a\ new\ auction\ containing\r\n\ the\ unsold\ lots\ of\ the\ closed\ auction.\ \ \r\n\ \r\n\ @param\ newAuction\ \ If\ the\ auction\ parameter\ is\ still\ open\ or\ null,\ this\ constructor\ behaves\ like\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ default\ constructor.\r\n
comment3.params=description
comment3.target=boolean\ enterLot(java.lang.String)
comment3.text=\r\n\ Enter\ a\ new\ lot\ into\ the\ auction.\ \ \r\n\ This\ function\ returns\ false\ if\ the\ auction\ is\ not\ open\ or\ if\ the\ description\ is\ null\ or\ otherwise\ true.\r\n\ \r\n\ @param\ description\ A\ description\ of\ the\ lot.\r\n\ @return\ false\ if\ auction\ is\ closed\ or\ if\ description\ is\ null\r\n
comment4.params=
comment4.target=void\ showLots()
comment4.text=\r\n\ Show\ the\ full\ list\ of\ lots\ in\ this\ auction.\r\n\r\n\ Print\ a\ blank\ line\ first,\ to\ make\ our\ output\ look\ nicer.\ \r\n\ If\ there\ are\ no\ lots,\ print\ a\ message\ indicating\ this\ \r\n\ \r\n
comment5.params=lotNumber\ bidder\ value
comment5.target=boolean\ bidFor(int,\ Person,\ long)
comment5.text=\r\n\ Bid\ for\ a\ lot.\r\n\ Do\ not\ assume\ that\ the\ lots\ are\ stored\ in\ numerical\ order.\r\n\ Prints\ a\ message\ indicating\ whether\ the\ bid\ is\ successful\ or\ not.\r\n\ \ \ \r\n\ First\ print\ a\ blank\ line.\ \ \r\n\ Then\ print\ whether\ or\ not\ the\ bid\ is\ successful.\r\n\ If\ the\ bid\ is\ successful,\ also\ print\ the\r\n\ lot\ number,\ high\ bidder's\ name,\ and\ the\ bid\ value.\r\n\ If\ the\ bid\ is\ not\ successful,\ also\ print\ the\ lot\ number\ \r\n\ and\ high\ bid\ (but\ not\ the\ high\ bidder's\ name).\r\n\ \r\n\ Returns\ false\ if\ the\ auction\ is\ closed,\ the\ lot\ doesn't\r\n\ exist,\ the\ bidder\ is\ null,\ or\ the\ bid\ was\ not\ positive\r\n\ and\ true\ otherwise\ (even\ if\ the\ bid\ was\ not\ high\ enough).\r\n\r\n\ @param\ number\ The\ lot\ number\ being\ bid\ for.\r\n\ @param\ bidder\ The\ person\ bidding\ for\ the\ lot.\r\n\ @param\ value\ \ The\ value\ of\ the\ bid.\r\n\ @return\ false\ if\ the\ auction\ is\ closed,\ the\ lot\ doesn't\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ exist,\ the\ bidder\ is\ null,\ or\ the\ bid\ was\ not\ positive\r\n\ \ \ \ \ \ \ \r\n
comment6.params=lotNumber
comment6.target=Lot\ getLot(int)
comment6.text=\r\n\ Return\ the\ lot\ with\ the\ given\ number.\ \r\n\ Do\ not\ assume\ that\ the\ lots\ are\ stored\ in\ numerical\ order.\ \ \ \r\n\ \ \ \r\n\ Returns\ null\ if\ the\ lot\ does\ not\ exist.\r\n\r\n\ @param\ lotNumber\ The\ number\ of\ the\ lot\ to\ return\r\n\ @return\ the\ Lot\ with\ the\ given\ number\r\n
comment7.params=
comment7.target=boolean\ close()
comment7.text=\r\n\ Closes\ the\ auction\ and\ prints\ information\ on\ the\ lots.\r\n\ First\ print\ a\ blank\ line.\ \ Then\ for\ each\ lot,\r\n\ its\ number\ and\ description\ are\ printed.\r\n\ If\ it\ did\ sell,\ the\ high\ bidder\ and\ bid\ value\ are\ also\ printed.\ \ \r\n\ If\ it\ didn't\ sell,\ that\ information\ is\ printed.\r\n\ \r\n\ @return\ false\ if\ the\ auction\ is\ already\ closed,\ true\ otherwise.\r\n\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getNoBids()
comment8.text=\r\n\ Returns\ an\ ArrayList\ containing\ all\ the\ items\ that\ have\ no\ bids\ so\ far.\r\n\ (or\ have\ not\ sold\ if\ the\ auction\ has\ ended).\r\n\ \r\n\ @return\ \ ArrayList\ of\ the\ Lots\ which\ currently\ have\ no\ bids\r\n
comment9.params=number
comment9.target=boolean\ removeLot(int)
comment9.text=\r\n\ Remove\ the\ lot\ with\ the\ given\ lot\ number,\ as\ long\ as\ the\ lot\ has\r\n\ no\ bids,\ and\ the\ auction\ is\ open.\ \ \r\n\ You\ must\ use\ an\ Iterator\ object\ to\ search\ the\ list\ and,\r\n\ if\ applicable,\ remove\ the\ item.\r\n\ Do\ not\ assume\ that\ the\ lots\ are\ stored\ in\ numerical\ order.\r\n\r\n\ Returns\ true\ if\ successful,\ false\ otherwise\ (auction\ closed,\r\n\ lot\ does\ not\ exist,\ or\ lot\ has\ a\ bid).\r\n\ \r\n\ @param\ number\ The\ number\ of\ the\ lot\ to\ be\ removed.\r\n\ @return\ true\ if\ removing\ an\ item\ was\ successful\r\n
numComments=10
